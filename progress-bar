#!/bin/bash

# Draw a progress bar in the terminal
progress_bar() {
  local current=$1
  local total=$2
  local bar_char='|'
  local empty_char=' '
  local length=50

  if (( total == 0 )); then
    echo -ne "[${empty_char// /$empty_char}$empty_char] 0/0 (0%)\r"
    return
  fi

  local perc_done=$((current * 100 / total))
  local num_bars=$((perc_done * length / 100))
  local i
  local bar='['

  for ((i = 0; i < num_bars; i++)); do
    bar+=$bar_char
  done
  for ((i = num_bars; i < length; i++)); do
    bar+=$empty_char
  done
  bar+=']'

  printf "\r%s %d/%d (%d%%)" "$bar" "$current" "$total" "$perc_done"
}

# Simulate processing a file (replace with actual logic)
process_file() {
  local file="$1"
  # Example: simulate work
  sleep 0.1
}

echo 'Finding files...'

# Find files matching *cache recursively
mapfile -d $'\0' files < <(find . -type f -name '*cache' -print0)
len=${#files[@]}

echo "Found $len files"

for ((i = 0; i < len; i++)); do
  progress_bar $((i + 1)) "$len"
  process_file "${files[i]}"
done

echo
